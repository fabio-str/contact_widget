var PageTextWidget = {
    welcomeMessage: '<%= @widget.welcome_message %>',
    backgroundColor: '<%= @widget.background_color %>',
    shape: '<%= @widget.shape %>',
    location: '<%= @widget.location %>',
    formHtml: '<%= j render "form" %>',
    cssStyles: "<%= asset_url('tailwind.css') %>",
    iconStyles: {
        circle: {
            backgroundColor: 'black',
            height: '50px',
            width: '50px',
            borderRadius: '50%',
            position: 'absolute',
            bottom: '10px',
            cursor: 'pointer',
            bottom: '10px' 
        },
        square: {
            backgroundColor: 'black',
            height: '50px',
            width: '50px',
            position: 'absolute',
            bottom: '10px',
            cursor: 'pointer',
            bottom: '10px'
        },
        rectangle: {
            backgroundColor: 'black',
            height: '50px',
            width: '100px',
            borderRadius: '10%',
            position: 'absolute',
            bottom: '10px',
            cursor: 'pointer',
            bottom: '10px'
        }
    },

    init: function() {
        this.showIcon();
        this.plantCss();
    },

    plantCss: function() {
        let stylesheet = document.createElement('link');
        stylesheet.rel = 'stylesheet';
        stylesheet.href = this.cssStyles;
        document.head.append(stylesheet);
    },

    customizeWidget: function() {
        var self = this;

        // set custom client id
        document.getElementById('client_id').value = '<%= @widget.client_id %>';

        // customize welcome message
        document.getElementById('page_text_widget_welcome_message').innerText = self.welcomeMessage;

        // customize background color of welcome message block and submit button
        Array.from(document.getElementsByClassName('page_text_widget_background_color')).forEach( function(el) {
            el.style.backgroundColor = self.backgroundColor;
        });

        // set form location
        let widget = document.getElementById('page_text_widget');
        let offset = '20px';
        widget.style.bottom = offset;
        
        if (self.location == 'bottom_right') {
            widget.style.right = offset;
        } else if (self.location == 'bottom_left') {
            widget.style.left = offset;
        };
    },

    customizeIcon: function(icon) {
        // set icon shape
        Object.assign(icon.style, this.iconStyles[this.shape]);

        // set icon location
        let offset = '10px'
        if (this.location == 'bottom_right') {
            icon.style.right = offset;
        } else if (this.location == 'bottom_left') {
            icon.style.left = offset;
        };

        // set Icon svg
        let viewBox = '-2 -2 28 28';
        if (this.shape == 'rectangle') {
            viewBox = '-2 -2 28 28'
        } else if (this.shape == 'circle') {
            viewBox = '-4 -4 32 32'
        } else if (this.shape == 'square') {
            viewBox = '-2 -2 28 28'
        }

        icon.insertAdjacentHTML('beforeend', '<svg xmlns="http://www.w3.org/2000/svg" fill="white" viewBox="' + viewBox + '" stroke-width="1.5" stroke="currentColor" class="w-full h-full "><path stroke-linecap="round" stroke-linejoin="round" d="M8.625 9.75a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.184-4.183a1.14 1.14 0 01.778-.332 48.294 48.294 0 005.83-.498c1.585-.233 2.708-1.626 2.708-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z" /></svg>');

        // plant icon
        document.body.append(icon);
    },

    showForm: function() {
        document.body.insertAdjacentHTML('beforeend', this.formHtml);

        this.customizeWidget();

        document.getElementById('new_message').addEventListener('submit', this.submitForm);
        document.getElementById('widget_cancel').addEventListener('click', this.hideForm);
        this.hideIcon();
        this.storeInfo();
    },

    hideForm: function() {
        document.getElementById('page_text_widget').remove();
        PageTextWidget.showIcon();
    },

    hideIcon: function() {
        document.getElementById('page_text_icon').remove();
    },

    showIcon: function() {
        let icon = document.createElement('span');
        icon.id = 'page_text_icon';
        icon.addEventListener('click', this.showForm.bind(this));
        this.customizeIcon(icon);
    },

    submitForm: function(e) {
        e.preventDefault();
        let form = e.target;
    
        fetch(form.action, {
          method: 'POST',
          body: new FormData(form)
        }).then((response) => {
          PageTextWidget.hideForm();
          var confirmationMessage = document.createElement('div');
          confirmationMessage.innerHTML = 'Your form has been submitted successfully!';
          confirmationMessage.classList.add('confirmation-notice');
          document.body.insertBefore(confirmationMessage, document.body.firstChild);

          setTimeout(function () {
            var elements = document.getElementsByClassName('confirmation-notice');
            if (elements.length > 0) { elements[0].remove(); }
            }, 3000);
        })
    },

    storeInfo: function () {
        // Attach event listeners to the name and email form fields
        const message_name = document.getElementById("message_name");
        const message_email = document.getElementById("message_email");
    
        message_name.addEventListener("change", function () {
            // Save the name to localStorage on change
            localStorage.setItem("pageTextWidget-name", this.value);
        });
    
        message_email.addEventListener("change", function () {
            // Save the email to localStorage on change
            localStorage.setItem("pageTextWidget-email", this.value);
        });
    
        // Check if we have pre-saved values for the name and email fields
        const savedName = localStorage.getItem("pageTextWidget-name");
        const savedEmail = localStorage.getItem("pageTextWidget-email");
    
        if (savedName) {
            // Pre-fill the name field
            message_name.value = savedName;
        }
    
        if (savedEmail) {
            // Pre-fill the email field
            message_email.value = savedEmail;
        }
    }
}

PageTextWidget.init();